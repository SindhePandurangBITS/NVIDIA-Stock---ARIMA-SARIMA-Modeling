# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1naQoUGIKRiEpHR2GcqhCHr-mPJsUXOMf
"""

# scripts/utils.py

import matplotlib.pyplot as plt
import numpy as np
from sklearn.metrics import mean_squared_error, mean_absolute_error
from statsmodels.graphics.tsaplots import plot_acf, plot_pacf

def plot_series(
    series,
    title: str = 'Time Series',
    xlabel: str = 'Date',
    ylabel: str = 'Value'
):
    plt.figure(figsize=(12,6))
    plt.plot(series, label=series.name or '')
    plt.title(title)
    plt.xlabel(xlabel)
    plt.ylabel(ylabel)
    plt.grid(True)
    plt.legend()
    plt.show()

# ACF and PACF plots
def plot_acf_pacf_series(series, lags: int = 30):
    fig, axes = plt.subplots(1, 2, figsize=(14,5))
    plot_acf(series, lags=lags, ax=axes[0])
    plot_pacf(series, lags=lags, ax=axes[1])
    plt.show()

# Evaluation Metrics
def calculate_metrics(actual: np.ndarray, predicted: np.ndarray) -> dict:
    mse = mean_squared_error(actual, predicted)
    rmse = np.sqrt(mse)
    mae = mean_absolute_error(actual, predicted)
    mape = np.mean(np.abs((actual - predicted) / actual)) * 100
    return {
        'mse': mse,
        'rmse': rmse,
        'mae': mae,
        'mape': mape
    }